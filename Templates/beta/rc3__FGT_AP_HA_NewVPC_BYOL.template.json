{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "(rc3) AWS CloudFormation Template to deploy a FGCP based Active-Passive HA solution with two FortiGates",
	"Metadata": {
		"AWS::CloudFormation::Interface": {
			"ParameterGroups": [{
					"Label": {
						"default": "VPC Configuration"
					},
					"Parameters": ["VPCCIDR", "PublicSubnet", "PrivateSubnet", "HAsyncSubnet", "HAmgmtSubnet"]
				},
				{
					"Label": {
						"default": "FortiGate Instance Configuration"
					},
					"Parameters": ["InstanceType", "CIDRForInstanceAccess", "AZForInstances", "KeyPair", "FortiGate1LicenseFile", "FortiGate2LicenseFile", "PublicSubnetRouterIP", "PublicSubnetDnsIP", "PrivateSubnetRouterIP", "HAmgmtSubnetRouterIP"]
				},
				{
					"Label": {
						"default": "Interface IP Configuration for FortiGate 1"
					},
					"Parameters": ["FortiGate1PublicIP", "FortiGate1PrivateIP", "FortiGate1HAsyncIP", "FortiGate1HAmgmtIP"]
				},
				{
					"Label": {
						"default": "Interface IP Configuration for FortiGate 2"
					},
					"Parameters": ["FortiGate2PublicIP", "FortiGate2PrivateIP", "FortiGate2HAsyncIP", "FortiGate2HAmgmtIP"]
				},
				{
					"Label": {
						"default": "Interface IP Configuration for the Cluster"
					},
					"Parameters": ["ClusterPublicIP", "ClusterPrivateIP"]
				}

			]
		}
	},
	"Parameters": {
		"VPCCIDR": {
			"Type": "String",
			"Default": "192.168.0.0/16",
			"Description": "Provide a network CIDR for the VPC"
		},
		"PublicSubnet": {
			"Type": "String",
			"Default": "192.168.1.0/24",
			"Description": "Provide a network CIDR for the PublicSubnet"
		},
		"PrivateSubnet": {
			"Type": "String",
			"Default": "192.168.2.0/24",
			"Description": "Provide a network CIDR for the PrivateSubnet"
		},
		"HAsyncSubnet": {
			"Type": "String",
			"Default": "192.168.3.0/24",
			"Description": "Provide a network CIDR for the HAsyncSubnet"
		},
		"HAmgmtSubnet": {
			"Type": "String",
			"Default": "192.168.4.0/24",
			"Description": "Provide a network CIDR for the HAmgmtSubnet"
		},
		"PublicSubnetRouterIP": {
			"Type": "String",
			"Default": "192.168.1.1",
			"Description": "Provide the IP address of the AWS intrinsic router (First IP from PublicSubnet)"
		},
		"PublicSubnetDnsIP": {
			"Type": "String",
			"Default": "192.168.1.2",
			"Description": "Provide the IP address of the AWS intrinsic dns server (Second IP from PublicSubnet)"
		},
		"PrivateSubnetRouterIP": {
			"Type": "String",
			"Default": "192.168.2.1",
			"Description": "Provide the IP address of the AWS intrinsic router (First IP from PrivateSubnet)"
		},
		"HAmgmtSubnetRouterIP": {
			"Type": "String",
			"Default": "192.168.4.1",
			"Description": "Provide the IP address of the AWS intrinsic router (First IP from HAmgmtSubnet)"
		},
		"FortiGate1PublicIP": {
			"Type": "String",
			"Default": "192.168.1.11/24",
			"Description": "Provide the IP address in CIDR form for the public interface of FortiGate 1 (IP from PublicSubnet)"
		},
		"FortiGate2PublicIP": {
			"Type": "String",
			"Default": "192.168.1.12/24",
			"Description": "Provide the IP address in CIDR form for the public interface of FortiGate 2 (IP from PublicSubnet)"
		},
		"FortiGate1PrivateIP": {
			"Type": "String",
			"Default": "192.168.2.11/24",
			"Description": "Provide the IP address in CIDR form for the private interface of FortiGate 1 (IP from PrivateSubnet)"
		},
		"FortiGate2PrivateIP": {
			"Type": "String",
			"Default": "192.168.2.12/24",
			"Description": "Provide the IP address in CIDR form for the private interface of FortiGate 2 (IP from PrivateSubnet)"
		},
		"FortiGate1HAsyncIP": {
			"Type": "String",
			"Default": "192.168.3.11/24",
			"Description": "Provide the IP address in CIDR form for the ha sync interface of FortiGate 1 (IP from HAsyncSubnet)"
		},
		"FortiGate2HAsyncIP": {
			"Type": "String",
			"Default": "192.168.3.12/24",
			"Description": "Provide the IP address in CIDR form for the ha sync interface of FortiGate 2 (IP from HAsyncSubnet)"
		},
		"FortiGate1HAmgmtIP": {
			"Type": "String",
			"Default": "192.168.4.11/24",
			"Description": "Provide the IP address in CIDR form for the ha management interface of FortiGate 1 (IP from HAmgmtSubnet)"
		},
		"FortiGate2HAmgmtIP": {
			"Type": "String",
			"Default": "192.168.4.12/24",
			"Description": "Provide the IP address in CIDR form for the ha management interface of FortiGate 2 (IP from HAmgmtSubnet)"
		},
		"ClusterPublicIP": {
			"Type": "String",
			"Default": "192.168.1.13/24",
			"Description": "Provide the IP address in CIDR form for the public interface of the Cluster (IP from PublicSubnet)"
		},
		"ClusterPrivateIP": {
			"Type": "String",
			"Default": "192.168.2.13/24",
			"Description": "Provide the IP address in CIDR form for the private interface of the Cluster (IP from PrivateSubnet)"
		},
		"InstanceType": {
			"Type": "String",
			"Default": "c5.xlarge",
			"Description": "Select the instance type for the FortiGates",
			"AllowedValues": [
				"c4.xlarge",
				"c4.2xlarge",
				"c4.4xlarge",
				"c4.8xlarge",
				"c5.xlarge",
				"c5.2xlarge",
				"c5.4xlarge",
				"c5.9xlarge"
			]
		},
		"CIDRForInstanceAccess": {
			"Type": "String",
			"Default": "0.0.0.0/0",
			"Description": "Provide a network CIDR from which the FortiGate instances will be accessed"
		},
		"KeyPair": {
			"Type": "AWS::EC2::KeyPair::KeyName",
			"Description": "Select a keypair to associate with the FortiGates"
		},
		"AZForInstances": {
			"Type": "AWS::EC2::AvailabilityZone::Name",
			"Description": "Select an Availability Zone for the FortiGates"
		},
		"FortiGate1LicenseFile": {
			"Description": "Provide the content of the license file for FortiGate 1 (ie -----BEGIN FGT VM LICENSE----- ... -----END FGT VM LICENSE-----)",
			"Type": "String"
		},
		"FortiGate2LicenseFile": {
			"Description": "Provide the content of the license file for FortiGate 2(ie -----BEGIN FGT VM LICENSE----- ... -----END FGT VM LICENSE-----)",
			"Type": "String"
		}
	},
	"Mappings": {
		"RegionMap": {
			"ap-northeast-1": {
				"fgtami": "ami-2865a957"
			},
			"ap-northeast-2": {
				"fgtami": "ami-dc9b31b2"
			},
			"ap-south-1": {
				"fgtami": "ami-bb88a0d4"
			},
			"ap-southeast-1": {
				"fgtami": "ami-5f6a6d23"
			},
			"ap-southeast-2": {
				"fgtami": "ami-6eaa750c"
			},
			"ca-central-1": {
				"fgtami": "ami-25028141"
			},
			"eu-central-1": {
				"fgtami": "ami-6a85b581"
			},
			"eu-west-1": {
				"fgtami": "ami-3da3ae44"
			},
			"eu-west-2": {
				"fgtami": "ami-878d63e0"
			},
			"eu-west-3": {
				"fgtami": "ami-ae2e9fd3"
			},
			"sa-east-1": {
				"fgtami": "ami-03461d6f"
			},
			"us-east-1": {
				"fgtami": "ami-48400137"
			},
			"us-east-2": {
				"fgtami": "ami-340a3451"
			},
			"us-west-1": {
				"fgtami": "ami-05de3a66"
			},
			"us-west-2": {
				"fgtami": "ami-b6befdce"
			}
		}
	},
	"Resources": {
		"InstanceRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [{
						"Effect": "Allow",
						"Principal": {
							"Service": ["ec2.amazonaws.com"]
						},
						"Action": ["sts:AssumeRole"]
					}]
				},
				"Path": "/",
				"Policies": [{
					"PolicyName": "ApplicationPolicy",
					"PolicyDocument": {
						"Version": "2012-10-17",
						"Statement": [{
							"Effect": "Allow",
							"Action": [
								"ec2:Describe*",
								"ec2:AssociateAddress",
								"ec2:AssignPrivateIpAddresses",
								"ec2:UnassignPrivateIpAddresses",
								"ec2:ReplaceRoute",
								"s3:GetObject"
							],
							"Resource": "*"
						}]
					}
				}]
			}
		},
		"InstanceProfile": {
			"Type": "AWS::IAM::InstanceProfile",
			"Properties": {
				"Path": "/",
				"Roles": [{
					"Ref": "InstanceRole"
				}]
			}
		},
		"VPC": {
			"Type": "AWS::EC2::VPC",
			"Properties": {
				"EnableDnsSupport": "true",
				"EnableDnsHostnames": "true",
				"CidrBlock": {
					"Ref": "VPCCIDR"
				},
				"Tags": [{
					"Key": "Name",
					"Value": {
						"Fn::Join": [
							"", [{
									"Ref": "AWS::StackName"
								},
								"-VPC"
							]
						]
					}
				}]
			}
		},
		"Subnet1": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": {
					"Ref": "PublicSubnet"
				},
				"AvailabilityZone": {
					"Ref": "AZForInstances"
				},
				"Tags": [{
					"Key": "Name",
					"Value": {
						"Fn::Join": [
							"", [{
									"Ref": "AWS::StackName"
								},
								"-PublicSubnet"
							]
						]
					}
				}]
			}
		},
		"Subnet2": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": {
					"Ref": "PrivateSubnet"
				},
				"AvailabilityZone": {
					"Ref": "AZForInstances"
				},
				"Tags": [{
					"Key": "Name",
					"Value": {
						"Fn::Join": [
							"", [{
									"Ref": "AWS::StackName"
								},
								"-PrivateSubnet"
							]
						]
					}
				}]
			}
		},
		"Subnet3": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": {
					"Ref": "HAsyncSubnet"
				},
				"AvailabilityZone": {
					"Ref": "AZForInstances"
				},
				"Tags": [{
					"Key": "Name",
					"Value": {
						"Fn::Join": [
							"", [{
									"Ref": "AWS::StackName"
								},
								"-HAsyncSubnet"
							]
						]
					}
				}]
			}
		},
		"Subnet4": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"CidrBlock": {
					"Ref": "HAmgmtSubnet"
				},
				"AvailabilityZone": {
					"Ref": "AZForInstances"
				},
				"Tags": [{
					"Key": "Name",
					"Value": {
						"Fn::Join": [
							"", [{
									"Ref": "AWS::StackName"
								},
								"-HAmgmtSubnet"
							]
						]
					}
				}]
			}
		},
		"InternetGateway": {
			"Type": "AWS::EC2::InternetGateway",
			"Properties": {
				"Tags": [{
					"Key": "Name",
					"Value": {
						"Fn::Join": [
							"", [{
									"Ref": "AWS::StackName"
								},
								"-IGW"
							]
						]
					}
				}]
			}
		},
		"AttachGateway": {
			"Type": "AWS::EC2::VPCGatewayAttachment",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"InternetGatewayId": {
					"Ref": "InternetGateway"
				}
			}
		},
		"RouteTable": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [{
					"Key": "Name",
					"Value": {
						"Fn::Join": [
							"", [{
									"Ref": "AWS::StackName"
								},
								"-PublicRouteTable"
							]
						]
					}
				}]
			}
		},
		"RouteTable1": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"Tags": [{
					"Key": "Name",
					"Value": {
						"Fn::Join": [
							"", [{
									"Ref": "AWS::StackName"
								},
								"-PrivateRouteTable"
							]
						]
					}
				}]
			}
		},
		"Route1": {
			"Type": "AWS::EC2::Route",
			"DependsOn": "AttachGateway",
			"Properties": {
				"RouteTableId": {
					"Ref": "RouteTable"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "InternetGateway"
				}
			}
		},
		"Route2": {
			"Type": "AWS::EC2::Route",
			"DependsOn": "AttachGateway",
			"Properties": {
				"RouteTableId": {
					"Ref": "RouteTable1"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"NetworkInterfaceId": {
					"Ref": "fgt1eni1"
				}
			}
		},
		"SubnetRouteTableAssociation1": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "Subnet1"
				},
				"RouteTableId": {
					"Ref": "RouteTable"
				}
			}
		},
		"SubnetRouteTableAssociation2": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "Subnet4"
				},
				"RouteTableId": {
					"Ref": "RouteTable"
				}
			}
		},
		"SubnetRouteTableAssociation3": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"SubnetId": {
					"Ref": "Subnet2"
				},
				"RouteTableId": {
					"Ref": "RouteTable1"
				}
			}
		},
		"FortiGateSecGrp": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"VpcId": {
					"Ref": "VPC"
				},
				"GroupDescription": "Allow All Traffic",
				"SecurityGroupIngress": [{
						"IpProtocol": "-1",
						"FromPort": "0",
						"ToPort": "65535",
						"CidrIp": {
							"Ref": "CIDRForInstanceAccess"
						}
					},
					{
						"IpProtocol": "-1",
						"FromPort": "0",
						"ToPort": "65535",
						"CidrIp": {
							"Ref": "VPCCIDR"
						}
					}
				]
			}
		},
		"Fgt1": {
			"Type": "AWS::EC2::Instance",
			"Properties": {
				"ImageId": {
					"Fn::FindInMap": ["RegionMap", {
						"Ref": "AWS::Region"
					}, "fgtami"]
				},
				"InstanceType": {
					"Ref": "InstanceType"
				},
				"IamInstanceProfile": {
					"Ref": "InstanceProfile"
				},
				"KeyName": {
					"Ref": "KeyPair"
				},
				"NetworkInterfaces": [{
						"NetworkInterfaceId": {
							"Ref": "fgt1eni0"
						},
						"DeviceIndex": "0"
					},
					{
						"NetworkInterfaceId": {
							"Ref": "fgt1eni1"
						},
						"DeviceIndex": "1"
					},
					{
						"NetworkInterfaceId": {
							"Ref": "fgt1eni2"
						},
						"DeviceIndex": "2"
					},
					{
						"NetworkInterfaceId": {
							"Ref": "fgt1eni3"
						},
						"DeviceIndex": "3"
					}
				],
				"Tags": [{
					"Key": "Name",
					"Value": {
						"Fn::Join": [
							"", [{
									"Ref": "AWS::StackName"
								},
								"-FortiGate1"
							]
						]
					}
				}],
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": ["\n", [
							"Content-Type: multipart/mixed; boundary=\"===============3585321300151562773==\"",
							"MIME-Version: 1.0",
							"",
							"--===============3585321300151562773==",
							"Content-Type: text/plain; charset=\"us-ascii\"",
							"MIME-Version: 1.0",
							"Content-Transfer-Encoding: 7bit",
							"Content-Disposition: attachment; filename=\"config\"",
							"",
							"config system global",
							"set hostname Fgt1",
							"set admintimeout 60",
							"end",
							"config system interface",
							"edit port1",
							"set alias public",
							"set mode static",
							{
								"Fn::Sub": "set ip ${ClusterPublicIP}"
							},
							"set allowaccess ping https ssh fgfm",
							"next",
							"edit port2",
							"set alias private",
							"set mode static",
							{
								"Fn::Sub": "set ip ${ClusterPrivateIP}"
							},
							"set allowaccess ping",
							"set mtu-override enable",
							"set mtu 9001",
							"next",
							"edit port3",
							"set alias hasync",
							"set mode static",
							{
								"Fn::Sub": "set ip ${FortiGate1HAsyncIP}"
							},
							"set allowaccess ping",
							"set mtu-override enable",
							"set mtu 9001",
							"next",
							"edit port4",
							"set alias hamgmt",
							"set mode static",
							{
								"Fn::Sub": "set ip ${FortiGate1HAmgmtIP}"
							},
							"set allowaccess ping https ssh",
							"set mtu-override enable",
							"set mtu 9001",
							"next",
							"end",
							"config router static",
							"edit 1",
							"set device port1",
							{
								"Fn::Sub": "set gateway ${PublicSubnetRouterIP}"
							},
							"next",
							"edit 2",
							{
								"Fn::Sub": "set dst ${VPCCIDR}"
							},
							"set device port2",
							{
								"Fn::Sub": "set gateway ${PrivateSubnetRouterIP}"
							},
							"next",
							"end",
							"config system dns",
							{
								"Fn::Sub": "set primary ${PublicSubnetDnsIP}"
							},
							"end",
							"config firewall policy",
							"edit 1",
							"set name outbound-all",
							"set srcintf port2",
							"set dstintf port1",
							"set srcaddr all",
							"set dstaddr all",
							"set action accept",
							"set schedule always",
							"set service ALL",
							"set logtraffic all",
							"set nat enable",
							"next",
							"end",
							"config system ha",
							"set group-name group1",
							"set mode a-p",
							"set hbdev port3 50",
							"set session-pickup enable",
							"set ha-mgmt-status enable",
							"config ha-mgmt-interface",
							"edit 1",
							"set interface port4",
							{
								"Fn::Sub": "set gateway ${HAmgmtSubnetRouterIP}"
							},
							"next",
							"end",
							"set override disable",
							"set priority 255",
							"set unicast-hb enable",
							{
								"Fn::Sub": ["set unicast-hb-peerip ${peerip}", {
									"peerip": {
										"Fn::Select": ["0", {
											"Fn::Split": ["/", {
												"Ref": "FortiGate2HAsyncIP"
											}]
										}]
									}
								}]
							},
							"end",
							"",
							"--===============3585321300151562773==",
							"Content-Type: text/plain; charset=\"us-ascii\"",
							"MIME-Version: 1.0",
							"Content-Transfer-Encoding: 7bit",
							"Content-Disposition: attachment; filename=\"license\"",
							"",
							{
								"Fn::Sub": "${FortiGate1LicenseFile}"
							},
							"",
							"--===============3585321300151562773==--"
						]]
					}
				}
			}
		},
		"Fgt2": {
			"Type": "AWS::EC2::Instance",
			"Properties": {
				"ImageId": {
					"Fn::FindInMap": ["RegionMap", {
						"Ref": "AWS::Region"
					}, "fgtami"]
				},
				"InstanceType": {
					"Ref": "InstanceType"
				},
				"IamInstanceProfile": {
					"Ref": "InstanceProfile"
				},
				"KeyName": {
					"Ref": "KeyPair"
				},
				"NetworkInterfaces": [{
						"NetworkInterfaceId": {
							"Ref": "fgt2eni0"
						},
						"DeviceIndex": "0"
					},
					{
						"NetworkInterfaceId": {
							"Ref": "fgt2eni1"
						},
						"DeviceIndex": "1"
					},
					{
						"NetworkInterfaceId": {
							"Ref": "fgt2eni2"
						},
						"DeviceIndex": "2"
					},
					{
						"NetworkInterfaceId": {
							"Ref": "fgt2eni3"
						},
						"DeviceIndex": "3"
					}
				],
				"Tags": [{
					"Key": "Name",
					"Value": {
						"Fn::Join": [
							"", [{
									"Ref": "AWS::StackName"
								},
								"-FortiGate2"
							]
						]
					}
				}],
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": ["\n", [
							"Content-Type: multipart/mixed; boundary=\"===============3585321300151562773==\"",
							"MIME-Version: 1.0",
							"",
							"--===============3585321300151562773==",
							"Content-Type: text/plain; charset=\"us-ascii\"",
							"MIME-Version: 1.0",
							"Content-Transfer-Encoding: 7bit",
							"Content-Disposition: attachment; filename=\"config\"",
							"",
							"config system global",
							"set hostname Fgt2",
							"set admintimeout 60",
							"end",
							"config system interface",
							"edit port1",
							"set alias public",
							"set mode static",
							{
								"Fn::Sub": "set ip ${FortiGate2PublicIP}"
							},
							"set allowaccess ping https ssh fgfm",
							"next",
							"edit port2",
							"set alias private",
							"set mode static",
							{
								"Fn::Sub": "set ip ${FortiGate2PrivateIP}"
							},
							"set allowaccess ping",
							"set mtu-override enable",
							"set mtu 9001",
							"next",
							"edit port3",
							"set alias hasync",
							"set mode static",
							{
								"Fn::Sub": "set ip ${FortiGate2HAsyncIP}"
							},
							"set allowaccess ping",
							"set mtu-override enable",
							"set mtu 9001",
							"next",
							"edit port4",
							"set alias hamgmt",
							"set mode static",
							{
								"Fn::Sub": "set ip ${FortiGate2HAmgmtIP}"
							},
							"set allowaccess ping https ssh",
							"set mtu-override enable",
							"set mtu 9001",
							"next",
							"end",
							"config router static",
							"edit 1",
							"set device port1",
							{
								"Fn::Sub": "set gateway ${PublicSubnetRouterIP}"
							},
							"next",
							"edit 2",
							{
								"Fn::Sub": "set dst ${VPCCIDR}"
							},
							"set device port2",
							{
								"Fn::Sub": "set gateway ${PrivateSubnetRouterIP}"
							},
							"next",
							"end",
							"config system dns",
							{
								"Fn::Sub": "set primary ${PublicSubnetDnsIP}"
							},
							"end",
							"config firewall policy",
							"edit 1",
							"set name outbound-all",
							"set srcintf port2",
							"set dstintf port1",
							"set srcaddr all",
							"set dstaddr all",
							"set action accept",
							"set schedule always",
							"set service ALL",
							"set logtraffic all",
							"set nat enable",
							"next",
							"end",
							"config system ha",
							"set group-name group1",
							"set mode a-p",
							"set hbdev port3 50",
							"set session-pickup enable",
							"set ha-mgmt-status enable",
							"config ha-mgmt-interface",
							"edit 1",
							"set interface port4",
							{
								"Fn::Sub": "set gateway ${HAmgmtSubnetRouterIP}"
							},
							"next",
							"end",
							"set override disable",
							"set priority 1",
							"set unicast-hb enable",
							{
								"Fn::Sub": ["set unicast-hb-peerip ${peerip}", {
									"peerip": {
										"Fn::Select": ["0", {
											"Fn::Split": ["/", {
												"Ref": "FortiGate1HAsyncIP"
											}]
										}]
									}
								}]
							},
							"end",
							"",
							"--===============3585321300151562773==",
							"Content-Type: text/plain; charset=\"us-ascii\"",
							"MIME-Version: 1.0",
							"Content-Transfer-Encoding: 7bit",
							"Content-Disposition: attachment; filename=\"license\"",
							"",
							{
								"Fn::Sub": "${FortiGate2LicenseFile}"
							},
							"",
							"--===============3585321300151562773==--"
						]]
					}
				}
			}
		},
		"fgt1eni0": {
			"Type": "AWS::EC2::NetworkInterface",
			"Properties": {
				"Description": "port1",
				"GroupSet": [{
					"Ref": "FortiGateSecGrp"
				}],
				"SourceDestCheck": "false",
				"SubnetId": {
					"Ref": "Subnet1"
				},
				"Tags": [{
					"Key": "Name",
					"Value": {
						"Fn::Join": [
							"", [{
									"Ref": "AWS::StackName"
								},
								"-fgt1eni0"
							]
						]
					}
				}, {
					"Key": "Interface",
					"Value": "eth0"
				}],
				"PrivateIpAddresses": [{
						"PrivateIpAddress": {
							"Fn::Select": ["0", {
								"Fn::Split": ["/", {
									"Ref": "FortiGate1PublicIP"
								}]
							}]
						},
						"Primary": "true"
					},
					{
						"PrivateIpAddress": {
							"Fn::Select": ["0", {
								"Fn::Split": ["/", {
									"Ref": "ClusterPublicIP"
								}]
							}]
						},
						"Primary": "false"
					}
				]
			}
		},
		"fgt2eni0": {
			"Type": "AWS::EC2::NetworkInterface",
			"Properties": {
				"Description": "port1",
				"GroupSet": [{
					"Ref": "FortiGateSecGrp"
				}],
				"SourceDestCheck": "false",
				"SubnetId": {
					"Ref": "Subnet1"
				},
				"Tags": [{
					"Key": "Name",
					"Value": {
						"Fn::Join": [
							"", [{
									"Ref": "AWS::StackName"
								},
								"-fgt2eni0"
							]
						]
					}
				}, {
					"Key": "Interface",
					"Value": "eth0"
				}],
				"PrivateIpAddress": {
					"Fn::Select": ["0", {
						"Fn::Split": ["/", {
							"Ref": "FortiGate2PublicIP"
						}]
					}]
				}
			}
		},
		"ClusterEIP": {
			"Type": "AWS::EC2::EIP",
			"Properties": {
				"Domain": "vpc"
			},
			"DependsOn": "Fgt1"
		},
		"Fgt1EIP": {
			"Type": "AWS::EC2::EIP",
			"Properties": {
				"Domain": "vpc"
			},
			"DependsOn": "Fgt1"
		},
		"Fgt2EIP": {
			"Type": "AWS::EC2::EIP",
			"Properties": {
				"Domain": "vpc"
			},
			"DependsOn": "Fgt2"
		},
		"ClusterIPASSOCIATION": {
			"Type": "AWS::EC2::EIPAssociation",
			"Properties": {
				"AllocationId": {
					"Fn::GetAtt": ["ClusterEIP", "AllocationId"]
				},
				"NetworkInterfaceId": {
					"Ref": "fgt1eni0"
				},
				"PrivateIpAddress": {
					"Fn::Select": ["0", {
						"Fn::Split": ["/", {
							"Ref": "ClusterPublicIP"
						}]
					}]
				}
			},
			"DependsOn": "ClusterEIP"
		},
		"fgt1eni1": {
			"Type": "AWS::EC2::NetworkInterface",
			"Properties": {
				"Description": "port2",
				"GroupSet": [{
					"Ref": "FortiGateSecGrp"
				}],
				"SourceDestCheck": "false",
				"SubnetId": {
					"Ref": "Subnet2"
				},
				"Tags": [{
					"Key": "Name",
					"Value": {
						"Fn::Join": [
							"", [{
									"Ref": "AWS::StackName"
								},
								"-fgt1eni1"
							]
						]
					}
				}],
				"PrivateIpAddresses": [{
						"PrivateIpAddress": {
							"Fn::Select": ["0", {
								"Fn::Split": ["/", {
									"Ref": "FortiGate1PrivateIP"
								}]
							}]
						},
						"Primary": "true"
					},
					{
						"PrivateIpAddress": {
							"Fn::Select": ["0", {
								"Fn::Split": ["/", {
									"Ref": "ClusterPrivateIP"
								}]
							}]
						},
						"Primary": "false"
					}
				]
			}
		},
		"fgt2eni1": {
			"Type": "AWS::EC2::NetworkInterface",
			"Properties": {
				"Description": "port2",
				"GroupSet": [{
					"Ref": "FortiGateSecGrp"
				}],
				"SourceDestCheck": "false",
				"SubnetId": {
					"Ref": "Subnet2"
				},
				"Tags": [{
					"Key": "Name",
					"Value": {
						"Fn::Join": [
							"", [{
									"Ref": "AWS::StackName"
								},
								"-fgt2eni1"
							]
						]
					}
				}],
				"PrivateIpAddress": {
					"Fn::Select": ["0", {
						"Fn::Split": ["/", {
							"Ref": "FortiGate2PrivateIP"
						}]
					}]
				}
			}
		},
		"fgt1eni2": {
			"Type": "AWS::EC2::NetworkInterface",
			"Properties": {
				"Description": "port3",
				"GroupSet": [{
					"Ref": "FortiGateSecGrp"
				}],
				"SourceDestCheck": "false",
				"SubnetId": {
					"Ref": "Subnet3"
				},
				"Tags": [{
					"Key": "Name",
					"Value": {
						"Fn::Join": [
							"", [{
									"Ref": "AWS::StackName"
								},
								"-fgt1eni2"
							]
						]
					}
				}],
				"PrivateIpAddress": {
					"Fn::Select": ["0", {
						"Fn::Split": ["/", {
							"Ref": "FortiGate1HAsyncIP"
						}]
					}]
				}
			}
		},
		"fgt1eni3": {
			"Type": "AWS::EC2::NetworkInterface",
			"Properties": {
				"Description": "port4",
				"GroupSet": [{
					"Ref": "FortiGateSecGrp"
				}],
				"SourceDestCheck": "false",
				"SubnetId": {
					"Ref": "Subnet4"
				},
				"Tags": [{
					"Key": "Name",
					"Value": {
						"Fn::Join": [
							"", [{
									"Ref": "AWS::StackName"
								},
								"-fgt1eni3"
							]
						]
					}
				}],
				"PrivateIpAddress": {
					"Fn::Select": ["0", {
						"Fn::Split": ["/", {
							"Ref": "FortiGate1HAmgmtIP"
						}]
					}]
				}
			}
		},
		"fgt2eni2": {
			"Type": "AWS::EC2::NetworkInterface",
			"Properties": {
				"Description": "port3",
				"GroupSet": [{
					"Ref": "FortiGateSecGrp"
				}],
				"SourceDestCheck": "false",
				"SubnetId": {
					"Ref": "Subnet3"
				},
				"Tags": [{
					"Key": "Name",
					"Value": {
						"Fn::Join": [
							"", [{
									"Ref": "AWS::StackName"
								},
								"-fgt2eni2"
							]
						]
					}
				}],
				"PrivateIpAddress": {
					"Fn::Select": ["0", {
						"Fn::Split": ["/", {
							"Ref": "FortiGate2HAsyncIP"
						}]
					}]
				}
			}
		},
		"fgt2eni3": {
			"Type": "AWS::EC2::NetworkInterface",
			"Properties": {
				"Description": "port4",
				"GroupSet": [{
					"Ref": "FortiGateSecGrp"
				}],
				"SourceDestCheck": "false",
				"SubnetId": {
					"Ref": "Subnet4"
				},
				"Tags": [{
					"Key": "Name",
					"Value": {
						"Fn::Join": [
							"", [{
									"Ref": "AWS::StackName"
								},
								"-fgt2eni3"
							]
						]
					}
				}],
				"PrivateIpAddress": {
					"Fn::Select": ["0", {
						"Fn::Split": ["/", {
							"Ref": "FortiGate2HAmgmtIP"
						}]
					}]
				}
			}
		},
		"Fgt1EIPASSOCIATION": {
			"Type": "AWS::EC2::EIPAssociation",
			"Properties": {
				"AllocationId": {
					"Fn::GetAtt": ["Fgt1EIP", "AllocationId"]
				},
				"NetworkInterfaceId": {
					"Ref": "fgt1eni3"
				},
				"PrivateIpAddress": {
					"Fn::Select": ["0", {
						"Fn::Split": ["/", {
							"Ref": "FortiGate1HAmgmtIP"
						}]
					}]
				}
			},
			"DependsOn": "Fgt1EIP"
		},
		"Fgt2EIPASSOCIATION": {
			"Type": "AWS::EC2::EIPAssociation",
			"Properties": {
				"AllocationId": {
					"Fn::GetAtt": ["Fgt2EIP", "AllocationId"]
				},
				"NetworkInterfaceId": {
					"Ref": "fgt2eni3"
				},
				"PrivateIpAddress": {
					"Fn::Select": ["0", {
						"Fn::Split": ["/", {
							"Ref": "FortiGate2HAmgmtIP"
						}]
					}]
				}
			},
			"DependsOn": "Fgt2EIP"
		}
	},
	"Outputs": {
		"Username": {
			"Value": "admin",
			"Description": "Username for the Fortigates"
		},
		"Password": {
			"Value": {
				"Ref": "Fgt1"
			},
			"Description": "Password for the FortiGates"
		},
		"ClusterLoginURL": {
			"Value": {
				"Fn::Join": [
					"", [
						"https://", {
							"Ref": "ClusterEIP"
						}
					]
				]
			},
			"Description": "Login URL for the public interface of the active FortiGate"
		},
		"FortiGate1LoginURL": {
			"Value": {
				"Fn::Join": [
					"", [
						"https://", {
							"Ref": "Fgt1EIP"
						}
					]
				]
			},
			"Description": "Login URL for the HAmgmt interface of FortiGate 1"
		},
		"FortiGate2LoginURL": {
			"Value": {
				"Fn::Join": [
					"", [
						"https://", {
							"Ref": "Fgt2EIP"
						}
					]
				]
			},
			"Description": "Login URL for the HAmgmt interface of FortiGate 2"
		}
	}
}